<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://newzone.top/rss.xml" rel="self" type="application/rss+xml"/>
    <title>LearnData-开源笔记</title>
    <link>https://newzone.top/</link>
    <description>开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。</description>
    <language>zh-CN</language>
    <pubDate>Thu, 25 Aug 2022 07:34:11 GMT</pubDate>
    <lastBuildDate>Thu, 25 Aug 2022 07:34:11 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>工具</category>
    <category>博客</category>
    <category>头脑驿站</category>
    <item>
      <title>电脑上实现微信双开，无需网页版或第三方软件</title>
      <link>https://newzone.top/_posts/2017-04-18-wechat_multi_open.html</link>
      <guid>https://newzone.top/_posts/2017-04-18-wechat_multi_open.html</guid>
      <source url="https://newzone.top/rss.xml">电脑上实现微信双开，无需网页版或第三方软件</source>
      <category>工具</category>
      <pubDate>Tue, 18 Apr 2017 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>由于工作原因，有时候我们需要在电脑上登录多个微信。但微信限制一个客户端只能登陆一个账号，PC 端 + 网页版就成了通用方案，操作效率下降许多。</p>
<p>其实我们还有更好的办法。在微信 PC 版之余，同时安装微信 For Windows，就能实现客户端双开！</p>
<h2 id="微信-for-windows-安装" tabindex="-1"> 微信 For Windows 安装</h2>
<p>打开「运行」对话框，输入并启动「应用商店」或「Microsoft Store」，搜索并安装 <code>微信 For Windows</code>。</p>
<p><img src="http://tc.seoipo.com/2022-05-06-04-21-30.png" alt="" loading="lazy"></p>
<p>安装好后，就能与微信 PC 版一齐启动，互不干扰。</p>
<p><img src="http://tc.seoipo.com/2022-05-06-04-21-40.png" alt="" loading="lazy"></p>
<h2 id="开机启动两个微信" tabindex="-1"> 开机启动两个微信</h2>
<p>找到系统启动文件夹，文件夹路径为：<code>%AppData%\Microsoft\Windows\Start Menu\Programs\Startup</code>。或者打开「运行」对话框，输入命令「shell:startup」，回车即可打开「启动文件夹」。</p>
<p>将微信 for windows 10 的快捷方式放到「启动」文件夹里。</p>
<p><img src="http://tc.seoipo.com/2022-05-06-04-23-49.png" alt="" loading="lazy"></p>
<p>三开的话，可以在 Microsoft Store 上安装 微信 (UWP) 。</p>
<p>如果还需要继续多开微信，可以参考 @刘舒怡 的方法：</p>
<blockquote>
<p>只要在 2 秒内快速连续双击打开软件，就能弹出很多登录界面，你想登多少个就登多少个</p>
</blockquote>
<p>另外，有人专门开发了微信/QQ 多开的补丁，需要四开以上的可以试试 <a href="https://github.com/huiyadanli/RevokeMsgPatcher" target="_blank" rel="noopener noreferrer">RevokeMsgPatcher</a>。</p>
<p>但多开补丁风险未知，我只用了其中的防撤回功能，需谨慎使用多开补丁。</p>
<p>国内搬运地址：<a href="https://wwz.lanzouf.com/ij0oz05ns3di" target="_blank" rel="noopener noreferrer">RevokeMsgPatcher.v1.5.zip</a></p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-06-04-21-30.png" type="image/png"/>
    </item>
    <item>
      <title>集自动发布、本地管理于一身：WordPress 博客管理方案分享</title>
      <link>https://newzone.top/_posts/2022-06-07-blog_md_to_wordpress.html</link>
      <guid>https://newzone.top/_posts/2022-06-07-blog_md_to_wordpress.html</guid>
      <source url="https://newzone.top/rss.xml">集自动发布、本地管理于一身：WordPress 博客管理方案分享</source>
      <category>博客</category>
      <pubDate>Tue, 07 Jun 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="博客探索" tabindex="-1"> 博客探索</h2>
<p>2005 年，我开始用博客记录感想，发布在 MSN space 平台和短命的 Google Sidewiki 上。六年后，MSN space 关闭，博客被转移到 WordPress 托管，我改用 Blogger，没多久就暂停了博客。​</p>
<p>2018 年，我偶然接触到 <a href="https://jekyllrb.com/" target="_blank" rel="noopener noreferrer">Jekyll</a>，被其简洁的界面和便捷性打动，重新恢复了博客记录。博客方向从感想记录转变到知识整理输出。Jekyll 方案需要首先在本地用 Markdown 编辑排版，然后同步到 github 发布，最后以 Markdown 格式手动分发到各个渠道。当文章较少时，这套方案的体验感特别好。​</p>
<p>到了 2021 年，<strong>随着文章和发布渠道的增多，文章的修改和管理变得愈加困难</strong>。慢慢地，我开始习惯本地 Markdown 只做初稿排版，更新则只在外部平台上进行。​</p>
<p>我的文章都是工具教程类，要随着工具的更新而修改，有时甚至要对几年前发布的文章进行更新。因此，针对少量平台更新的策略，带来了文章版本混乱，让博客偏离了知识记录的初衷。为了保证文章版本统一，我把博客从 Jekyll 迁移到 WordPress，准备以 WordPress 作为统一版。</p>
<p><img src="http://tc.seoipo.com/20210128124408.png?imageMogr2/thumbnail/!40p" alt="Jekyll 博客" loading="lazy"></p>
<p>然而，WordPress 方案很快就被放弃了。原因除了 WordPress 糟糕的编辑体验，更重要的是，我遇到了 Notion。其界面美观，编辑方便，支持对外展示，能导出为 Markdown、HTML 文件。​</p>
<p>可是，没什么平台是完美的。Notion 不支持同步本地 markdown 内容，图床不能在站外使用，国内访问速度成谜。这令 <strong>Notion 只适合个人分享，而非博客网站</strong>。我用 Notion，纯属垂涎美色。​</p>
<p>2022 年，由于疫情被封控在家两个月。时间多了，我继续折腾博客，希望找到一个界面美观，能自动发布且具备本地管理功能的博客方案。</p>
<h2 id="博客方案" tabindex="-1"> 博客方案</h2>
<p>最初，我幻想着修改一篇文章同步到多个平台，但找了许久也没有合适的。网上所谓的一键分发软件，实际上是通过网页操作来完成发布，并不能自动修改更新。​</p>
<p>剔除掉这类不现实的想法后，新的博客方案以 Markdown 版本为主，自动同步 WordPress，最后手动同步主要分发平台。​</p>
<p><strong>最终方案</strong>如下：​</p>
<ol>
<li>
<p>初稿：Markdown 本地编辑文章，使用七牛云自建图床。​</p>
</li>
<li>
<p>发布：同步本地 Markdown 文本，自动发布，保持主要平台内容为最新。​</p>
</li>
<li>
<p>管理：本地更新修改 Markdown 文件，docsify 页面整合文本内容，博客后台管理文章版本。​</p>
</li>
<li>
<p>订阅：用户能通过 RSS、邮件或微信来订阅博客更新。</p>
</li>
</ol>
<h2 id="发布工具-wordpressxmlrpctools" tabindex="-1"> 发布工具：WordPressXMLRPCTools</h2>
<p><a href="https://github.com/zhaoolee/WordPressXMLRPCTools" target="_blank" rel="noopener noreferrer">WordPressXMLRPCTools</a> 能用 Markdown 生成博客，推送更新到 Github 后，通过 Github Actions 自动将文章更新到 WordPress，并将 WordPress 网站的文章索引更新到 Github 仓库的 README.md，供搜索引擎收录，方便 Windows 用户使用。iOS 用户有更成熟的发布工具，如 @ern 推荐的 MWeb/Ulysses，同步 WordPress 更简单。</p>
<p>基于 WordPressXMLRPCTools，我做了三点修改：​</p>
<ul>
<li>
<p>发布设置：修改 <code>main.py</code> 文件。</p>
<ul>
<li>修复无法覆盖更新文章的 bug。</li>
<li>调整项目页的时间格式。</li>
<li>页首添加文章编辑时间，默认为格林尼治标准时间，比北京晚 8 小时。</li>
<li>将文章页尾部的本文永久更新地址从标题格式调整为常规字母。</li>
</ul>
</li>
<li>
<p>草稿箱：<code>_post</code> 路径内新建 <code>TEMP</code> 文件夹，用于存放文章草稿。WordPress 推送程序会忽略 <code>_post</code> 子文件夹的内容，换言之，<code>TEMP</code> 文件夹不会发布到 WordPress 网站。</p>
</li>
<li>
<p>文章聚合页：主目录新增 <code>.nojekyll</code>，<code>index.html</code>，<code>_sidebar.md</code> 文件，引入文档生成工具 docsify，将博客文章聚合在一个页面，方便快速定位和位置管理。示例：<a href="https://rockbenben.github.io/Blog_WP/" target="_blank" rel="noopener noreferrer">https://rockbenben.github.io/Blog_WP/</a>。</p>
<p><img src="http://tc.seoipo.com/2022-05-26-20-12-56.png" alt="" loading="lazy"></p>
</li>
</ul>
<h3 id="使用流程" tabindex="-1"> 使用流程</h3>
<ol>
<li>进入 <a href="https://github.com/rockbenben/Blog_WP" target="_blank" rel="noopener noreferrer">项目页面</a>，点击「Use this template」，复制模板文件。</li>
<li>回到你新建的 repo，删除 _post 文件夹中的所有文件，参照主目录下 <code>example_article.md</code> 的格式编辑文章。注意：md 文件名不能包含大写字母。</li>
<li>按 <a href="https://github.com/zhaoolee/WordPressXMLRPCTools#%E7%94%A8github-actions%E5%86%99markdown%E6%96%87%E7%AB%A0%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%88%B0wordpress" target="_blank" rel="noopener noreferrer">WordPressXMLRPCTools 安装步骤</a>执行，如遇报错，查看下方使用问题。</li>
<li>修改主目录下的 <code>index.html</code> 和 <code>_sidebar.md</code> 文件，调整 docsify 网页设置。
<ul>
<li><code>index.html</code> 修改 docsify 网页标题、描述和关键词。</li>
<li><code>_sidebar.md</code> 修改 docsify 网页侧边栏，加入博客文章的标题和位置。</li>
</ul>
</li>
</ol>
<h3 id="使用问题" tabindex="-1"> 使用问题</h3>
<h4 id="文章发布不成功" tabindex="-1"> 文章发布不成功</h4>
<p><code>_post</code> 文件夹添加了文档，但同步后，<code>README.md</code> 和 WordPress 并没有添加文章。</p>
<p>检查以下两点：</p>
<ul>
<li>文章后缀必须为「.md」，不支持「.markdown」或其他后缀格式。</li>
<li>进入 repo 页面中的 <code>Actions</code>，检查最近一次的 update 是否正确。
<img src="http://tc.seoipo.com/2022-05-26-20-36-56.png" alt="" loading="lazy"></li>
</ul>
<h4 id="error-git-denied-to-github-actions-bot" tabindex="-1"> Error: git denied to github-actions[bot]</h4>
<p>遇到 GitHub Actions 报错：<code>git denied to github-actions[bot]</code>或<code>Process completed with exit code 128</code>。</p>
<p>依次点击该 repository 的 <code>Setting - Code and automation - Actions - General</code>，然后在 Workflow permissions 中开启「Read and write permissions」。</p>
<h4 id="error-process-completed-with-exit-code-1" tabindex="-1"> Error: Process completed with exit code 1</h4>
<p>遇到 GitHub Actions 报错：<code>Error: Process completed with exit code 1</code>，可能是文章内容触发了服务器的安全规则，拒绝了文章的同步。</p>
<p>如果出现该项报错，暂时关闭服务器防火墙，可解决问题。同步完成后，记得重新开启防火墙。</p>
<h4 id="无法覆盖更新原文章-​" tabindex="-1"> 无法覆盖更新原文章 ​</h4>
<p>修改旧文章并同步后，WordPress 站的文章没同步修改，而是新增了一篇相同的文章。</p>
<ul>
<li>检查 md 文件名有没有出现大写字母，有没有更改文件名。</li>
<li>进入 WordPress 后台，设置 - 固定链接，选中自定义结构，并将文章链接设为 <code>/p/%postname%</code>。</li>
</ul>
<p>如果修改版在检查后依然出现此问题，建议手动将新文章内容覆盖旧文章，然后删除新文章。​ 这个 bug 可以当作是强提醒。当 WordPress 新增了旧文章，你就被提醒要在其他平台修改该文章，让文章版本保持统一。​</p>
<h4 id="wordpress-发布时间与实际不符-​" tabindex="-1"> WordPress 发布时间与实际不符 ​</h4>
<p>同步文章后，WordPress 显示的文章发布时间是 GitHub push 时间，而非文章真实的发布时间。​</p>
<p>如果你将旧文章转移到 WordPress，文章的发布时间需在 WordPress 后台手动修改，无法在 Markdown 文件中指定 WordPress 显示的发布时间。</p>
<h4 id="有序列表编号有误" tabindex="-1"> 有序列表编号有误</h4>
<p>文章中设定的编号是 <code>3</code>，但同步到 WordPress 后，变成了 <code>1</code>。</p>
<p>有序列表中穿插了图片、段落，编号就会重置到 <code>1</code>。去除图片与旧序列的空行，就能识别正确编号。</p>
<h4 id="无序列表只有一个层级" tabindex="-1"> 无序列表只有一个层级</h4>
<p>Markdown 转 WordPRess 文章时，默认规则无法识别缩进级别。多层级列表只会显示一个层级，其他层级的列表都被提到第一层级。</p>
<h2 id="本地管理-markdown-文章" tabindex="-1"> 本地管理 Markdown 文章</h2>
<p>如果用 Windows 资源管理器管理 Markdown 文章，会存在 3 个问题：</p>
<ul>
<li>资源管理器的视觉效果非常难看。</li>
<li>Markdown 文件名称不能展示关键信息，较难定位文档。文章越多，管理越困难。</li>
<li>无法对文章内容进行本地检索，只能通过文件名称猜测内容。
<img src="http://tc.seoipo.com/2022-05-30-19-00-15.png" alt="难以管理的本地文档" loading="lazy"></li>
</ul>
<p>为解决这些问题，我借助飞书表格、RunAny 和 docsify 重构本地文章管理方案。</p>
<h3 id="飞书文档管理" tabindex="-1"> 飞书文档管理</h3>
<p>飞书文档功能与 Notion、Airtable 类似，可将文字、链接、图片聚合在同一页面，操作便捷。</p>
<p>打开飞书多维表格，填入本地 Markdown 文章的标题、本地位置、链接、标签和封面，即可聚合本地文章的关键信息。将表格视图切换为「画册视图」，文档管理界面更达到 90% 的 Notion 视觉效果。</p>
<p><img src="http://tc.seoipo.com/2022-05-06-12-43-36.png" alt="飞书表格视图" loading="lazy"></p>
<p><img src="http://tc.seoipo.com/2022-05-06-12-28-41.png" alt="飞书画册视图" loading="lazy"></p>
<h3 id="runany-文档直达-​" tabindex="-1"> RunAny 文档直达 ​</h3>
<p>在线文档中，无法像打开超链接一样直接打开本地文件。如果你想节省中间打开时间，可以使用 RunAny。​</p>
<p><a href="https://hui-zz.gitee.io/runany/#/" target="_blank" rel="noopener noreferrer">RunAny</a> 是基于 AutoHotKey 的一键启动软件。按下方配置后，点击飞书表格中的「本地位置」，即可使用默认编辑器打开 md 文件。如果你的默认编辑器是 notepad++，则将下方命令中的 <code>Code.exe</code> 替换为 <code>notepad++.exe</code>。</p>
<div><pre><code><span>;将 Runany 主目录下的 RunAny.ini 文件内的「编辑」模块替换为下方命令</span>
-编辑(&amp;Edit)
 --编程|cmd bat md ahk html js css json yml yaml py
 vscode|Code.exe
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="docsify-全文检索" tabindex="-1"> docsify 全文检索</h3>
<p>飞书表格可以搜索关键元素，但不能对检索全文。这时，我们需要使用 <a href="https://docsify.js.org/#/" target="_blank" rel="noopener noreferrer">docsify</a>，一款能将 markdown 文档自动生成网站的工具，相当于轻量级的 GitBook。​</p>
<p>docsify 使用简单，如果使用了前文我修改过的<a href="https://github.com/rockbenben/Blog_WP" target="_blank" rel="noopener noreferrer">发布工具</a>，则无需配置。在发布工具文件夹内的空白区域，右键打开终端，执行命令<code>docsify serve</code>即可生成全文检索网页，默认管理链接为 <a href="http://localhost:3000/#/" target="_blank" rel="noopener noreferrer">http://localhost:3000/#/</a>。</p>
<p><img src="http://tc.seoipo.com/2022-05-30-20-03-19.png" alt="docsify 本地运行" loading="lazy"></p>
<p>如果你设置了 Github Pages，项目会默认启动在线 docsify 网页，页面链接取决于 Github 的设置。比如我的用户名是 rockbenben，项目名是 Blog_WP，所以 docsify 管理页面就是 <a href="https://rockbenben.github.io/Blog_WP/" target="_blank" rel="noopener noreferrer">https://rockbenben.github.io/Blog_WP/</a>。</p>
<h2 id="订阅管理-wordpress" tabindex="-1"> 订阅管理：WordPress</h2>
<p>40% 的网站基于 WordPress 架构，因此 WordPress 有超多的主题和插件，可以实现你想要的功能，比如 RSS、Newsletter。</p>
<p>如果你拥有较多的粉丝，可以使用 <a href="https://substack.com/" target="_blank" rel="noopener noreferrer">Substack</a> 和 <a href="https://zhubai.love/" target="_blank" rel="noopener noreferrer">竹白</a> 来分发博客。这两者都支持 Newsletter 付费订阅。只针对国内用户的话，竹白可支持微信订阅。</p>
<h2 id="后续" tabindex="-1"> 后续</h2>
<p>比起原来的 Jekyll，新方案的配置要复杂些，但使用并不难，推荐稿件多的人采用。</p>
<p>折腾新方案的过程中，我发现了篇 2021 年初写的文章。当时，稿子写到 90%，我就去忙其他事，忘了这篇文章。等到这次被发现，它已经在草稿箱待了一年半。</p>
<p>用了新方案，稿件管理会变得很简单，稿件遗忘、找不到的情况也会减少许多。最近我出稿速度大增，也都跟这有关，都是从草稿箱捡回来的半成品。</p>
<p>写完这篇稿子，疫情封控也正好结束，终于可以出门了，希望永远别再给「免费假期」了。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20210128124408.png?imageMogr2/thumbnail/!40p" type="image/"/>
    </item>
    <item>
      <title>抛弃知识管理软件的尝试：把博客变为知识库</title>
      <link>https://newzone.top/_posts/2022-08-22-learndata_blog_to_knowledge_management.html</link>
      <guid>https://newzone.top/_posts/2022-08-22-learndata_blog_to_knowledge_management.html</guid>
      <source url="https://newzone.top/rss.xml">抛弃知识管理软件的尝试：把博客变为知识库</source>
      <category>博客</category>
      <category>头脑驿站</category>
      <pubDate>Mon, 22 Aug 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Notion、Obsidian、Logseq、Roam Research、Evernote、flomo、为知、飞书、语雀……知识管理/笔记软件越来越多，我总在不同应用间徘徊。直到有次忽然醒悟，知识管理软件不是管理知识，而是管理笔记。<strong>笔记里的知识并不属于你，只有经过消化、应用，才会成为自己的知识。</strong></p>
<p>这么简单的事，我之前却一直没看透，总是把笔记与知识理解划上了等号。当要用到曾摘录的笔记时，就在各类知识管理软件里翻找，折腾一番才找到需要的笔记，有时甚至出现「自己不清楚放在哪里，也不清楚是否有」的情况。记笔记花了一个小时，下次寻找与重新消化又花了一个小时，原本为效率而生的知识管理软件变成了浪费时间的杀手。</p>
<p>另一方面，我们在用知识管理软件的美观界面和强大功能的同时，也被这些软件所限制，无法完全按自己的想法输出笔记。比如，你长了一双翅膀，<strong>Markdown 文本是自由的天地，而进入 Notion 则被隔成一个个小房间</strong>，你在房间里待着很舒服，可一旦想去其他房间，就必须脱离 block，不比 Markdown 可以自由飞翔。</p>
<p><img src="http://tc.seoipo.com/2022-08-22-18-02-07.png" alt="" title="Markdown VS Notion" loading="lazy"></p>
<p>突破迷思后，我基于 VuePress 和 vuepress-theme-hope 建立了 <a href="https://github.com/rockbenben/LearnData" target="_blank" rel="noopener noreferrer">LearnData</a> 项目，把知识笔记、生活记录、博客和任何觉得有价值的记录转成 Markdown 文本，然后推送到 GitHub 生成 Pages 静态页面，同步到国内云服务器形成 <a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">LearnData - 开源笔记</a>。</p>
<p><img src="http://tc.seoipo.com/2022-08-24-19-14-59.png" alt="" title="笔记/博客自动化发布" loading="lazy"></p>
<p>LearnData 的笔记/文章编辑均使用 Markdown，输出不再受到应用的局限。同时，LearnData 看似是由一篇篇文章组成的博客，但其笔记是独立的知识点，是所有知识的终点站，是整理后的知识库。通过 LearnData 就能完成知识的搜索与整理，不再需要来回翻找。把博客转为知识库后，我明显感到学习和知识使用的效率得到提高，开始摆脱「工具奴隶」和「效率中毒」陷阱。</p>
<p><img src="http://tc.seoipo.com/2022-08-22-19-28-25.png" alt="" title="笔记 + 文章 = LearnData 知识库" loading="lazy"></p>
<h2 id="为什么用网页管理笔记" tabindex="-1"> 为什么用网页管理笔记</h2>
<h3 id="公开分享想法" tabindex="-1"> 公开分享想法</h3>
<p>知识管理/笔记软件天然带有私有性质，不对外公开。但是，我的笔记大都来自互联网，要对谁保密？</p>
<p>我很推崇 Ray Dalio 在《原则》中提到的「头脑极度透明，公开分享想法」。</p>
<blockquote>
<p>让其他人无比清晰地看到你在做什么、为什么这么做。头脑越透明，越不会自欺，其他人也会给你诚实的反馈。</p>
</blockquote>
<p>作为国内最早一批介绍 Aria2 的人，我曾经写过一篇 Aria2 教程，文章后来被多个网站参考/抄袭，覆盖了 Aria2 某度搜索前三页。在那篇文章的评论区，有好几条留言说文章逻辑差看不懂的，也经常有热心人帮我怼回去。其实，那篇文章的初版真的很糟糕，只是写得比较早，当时没几篇中文教程，大家只能看这篇教程。我写文章的初衷是方便自己用，避免一个解决方案用完就忘，下次又从头开始。那篇文章是在大家的反馈下，迭代了三个版本才开始变得完整和逻辑化。这些反馈也是我坚持写博客的原动力。这跟费曼学习法的道理相通，当你写文章帮助其他人时，你也在加深自己对知识的理解。</p>
<p>建立 LearnData 只有一个月，但我从中获取的正反馈超过私有笔记一年的获得。笔记公开化是有百利而无一害。</p>
<h3 id="输出分享" tabindex="-1"> 输出分享</h3>
<p>其次，网页形式让笔记方便分享。除了效率工具心得，我把生活技巧、购物评价和说明书也放在 LearnData。家人或朋友需要帮助时，直接访问网页即可，不需要安装 app 或折腾账户分享，比如下图的 <a href="https://newzone.top/family/Maintenance.html#%E9%80%9A%E9%A9%AC%E6%A1%B6" target="_blank" rel="noopener noreferrer">通马桶技巧</a> 和疏通器说明书。</p>
<p><img src="http://tc.seoipo.com/2022-08-19-22-52-29.png" alt="生活知识页面样例" loading="lazy"></p>
<h3 id="漂亮决定生产力" tabindex="-1"> 漂亮决定生产力</h3>
<p>另外，网页能自由调整外观样式，更换为你喜欢的界面。这也是为什么 LearnData 舍弃了初版的 docsify 框架，改为复杂许多的 VuePress 框架。docsify 官方模板过于简单，没有界面设计模块，难以满足知识管理界面必须直观漂亮的要求，而这点直接决定了生产力，不能让步。</p>
<p>知识管理/笔记软件将 Markdown 文件作为一个个区块，而网页可以将其视为一体。LearnData 支持多级侧边栏和目录，让阅读查找变得简单。</p>
<p><img src="http://tc.seoipo.com/2022-08-19-22-42-03.png" alt="" title="LearnData 页面布局" loading="lazy"></p>
<h2 id="为什么不用-obsidian" tabindex="-1"> 为什么不用 Obsidian</h2>
<p>@北鸮 提到「脱离 Notion 可以理解，Markdown 很自由，那为啥不用 Obsidian 呢？也有标题，也有标签，也可以有层级，开源软件还有 Logseq 替代」。</p>
<p>Obsidian 等双链笔记想法设计很好，我们可以自由地在不同知识点间切换，节省搜索和关联的时间。但知识点的联系是靠人工打标签来建立的，而非根据关键词自动建立图谱关系。这跟 URL 链接又有什么区别？因此我认为，<strong>双链笔记并不适合知识库</strong>。（如果对双链笔记理解错误，欢迎纠正。）</p>
<p><img src="http://tc.seoipo.com/2022-08-19-21-39-41.png?imageMogr2/thumbnail/!60p" alt="" title="我的 Obsidian 图谱，只有右下角简悦抓取的素材有相同标签而聚作一团" loading="lazy"></p>
<p>建立知识点联系后，双链笔记能轻松处理成千上万个文档，按条件整合文本方便阅读。但是，多数人常用知识范围不会超过一百。如果你的个人笔记上千了，说明你要不是科研大佬，要不没消化甚至是根本没读过这些笔记，只是在记笔记。</p>
<p>除去博客，我只有 37 篇笔记，而且按功能划分为 7 个区块。你觉得这点文件，用树状管理方便，还是用双链笔记打一堆标签来得好？即使有时标题里找不到某个关键词，我用全文搜索达到目的。我个人会倾向于简单方便的树状标题管理。</p>
<h2 id="抛弃知识软件-不用" tabindex="-1"> 抛弃知识软件 ≠ 不用</h2>
<p>选择 Markdown 就得卸载知识软件吗？</p>
<p>抛弃知识软件并不是不用，而是将其视为知识的中转站。知识软件的趋势是 ALL IN ONE，记录全能成了标榜的主打功能。可是，<strong>光收集而不应用的知识等于零</strong>，只会增加你后续的使用成本。</p>
<p>知识软件对我来说，是功能清晰的素材库。我会不断清空素材库，将小的知识点融入 LearnData 笔记区，成体系内容则写成博客，确保 LearnData 成为知识库的终点。</p>
<p><img src="http://tc.seoipo.com/2022-08-21-21-38-47.png" alt="" title="知识类素材库" loading="lazy"></p>
<ul>
<li>Logseq 对信息节点化，能按日期整合文本，因此我用它来记录笔记，并定期生成周报和月报回顾。</li>
<li>飞书文档自带侧边目录栏，对长文档优化很好，因此我用它来记录工作心得，定期形成工作流程在公司分享。</li>
<li>WonderPen 带多层级标题，当一点头绪方向都没有时，素材就直接丢这。</li>
<li>Notion 貌似全能，但其可替代性也最高，知识库迁移到 LearnData 后，Notion 仅存放涉及个人信息和不方便转移的旧文档。</li>
<li>Airtable 表格功能最强，虽然已经被其他软件赶上了，但前期存储过多，表格类继续放这。</li>
<li>SuperMemo 与 Anki 功能类似，对记忆性的笔记定期复习。</li>
</ul>
<h2 id="如果你也想试试" tabindex="-1"> 如果你也想试试……</h2>
<p>如何搭建把博客转为知识库，建立属于你的 LearnData 知识管理网站呢？</p>
<p>首先，确定你有 GitHub 账户，懂 Markdown 和基础 HTML 知识。然后，按 <a href="https://newzone.top/#%E6%90%AD%E5%BB%BA-LearnData" target="_blank" rel="noopener noreferrer">LearnData 部署教程</a> 即可完成搭建和配置。如果你的笔记已经 Markdown 化，把文档放在 docs 目录下就可以建立你自己的知识库。</p>
<p>笔记结构可以参考我的分类。这没有绝对的界限，只要看到自己觉得有价值的知识点，都可以往 LearnData 里丢。等下次应用到这个知识点时，我们再考虑整理事宜，否则，长时间用不到的知识，又有什么整理的必要呢。</p>
<ul>
<li>置顶：日常习惯、健身、阅读；</li>
<li>代码：常用代码的学习使用笔记；</li>
<li>软件应用：常用应用、Chrome 扩展及相关教程；</li>
<li>页面开发：页面插件和框架生成工具；</li>
<li>网站部署：网站相关的平台、工具及知识收集；</li>
<li>Linux 服务：NAS 和服务器上的后端应用，主要以 Docker 方式部署；</li>
<li>系统问题：Windows 系统优化和相关问题；</li>
<li>生活区：说明书，生活记录及小技巧；</li>
<li>博客区：聚合所有博客文章，并以分类、标签、时间轴等方式进行组合。</li>
</ul>
<h2 id="最后" tabindex="-1"> 最后</h2>
<p>两个月前，我在 WordPress 博客篇中喊着「md2wordpress 是最后一次博客方案」，但由于 WordPress 与 Markdown 各种不兼容，写完没多久就换到支持原生 Markdown 解析的 VuePress。</p>
<p>这次我不想再立 Flag 了，只希望能放过自己。每进行一次知识迁移，真是大伤，休息一段时间吧。</p>
<p>如果你有兴趣尝试 <a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">LearnData</a>，欢迎通过链接访问并复制模板尝试，具体的操作方法与常见问答我都写在博客中。有进一步的问题或讨论欢迎在评论区留言。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>